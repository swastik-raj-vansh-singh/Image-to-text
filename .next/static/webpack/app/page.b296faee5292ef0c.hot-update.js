"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/ImageToText.tsx":
/*!****************************************!*\
  !*** ./src/components/ImageToText.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ImageToText)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/toast/use-toast.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/grid/grid.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/form-control/form-control.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/form-control/form-label.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/switch/switch.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/box/box.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/flex/flex.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/slider/slider.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/number-input/number-input.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/stack/v-stack.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/typography/heading.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/typography/text.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/stack/h-stack.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/badge/badge.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/input/input.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/accordion/accordion.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/accordion/accordion-item.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/accordion/accordion-button.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/accordion/accordion-icon.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/accordion/accordion-panel.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/select/select.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/button/button.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/image/image.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/button/icon-button.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/tooltip/tooltip.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/progress/progress.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/textarea/textarea.mjs\");\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tesseract.js */ \"(app-pages-browser)/./node_modules/tesseract.js/src/index.js\");\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(tesseract_js__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nconst MAX_IMAGES = 30;\nconst ACCEPTED_FILE_TYPES = [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/webp',\n    'image/gif',\n    'image/bmp'\n];\n// OCR configurations\nconst OCR_LANGUAGES = {\n    'eng': 'English',\n    'eng+osd': 'English with orientation detection',\n    'eng+equ': 'English with math/equation detection'\n};\n// PSM modes for more precise text extraction\nconst PSM_MODES = {\n    '1': 'Auto with orientation',\n    '3': 'Fully automatic',\n    '4': 'Single column of text',\n    '6': 'Single uniform block of text',\n    '11': 'Sparse text',\n    '12': 'Sparse text with OSD',\n    '13': 'Raw line detection'\n};\n// Table formatting options\nconst TABLE_FORMATS = {\n    'plain': 'Plain text (spaces)',\n    'markdown': 'Markdown table',\n    'formatted': 'Formatted table (aligned columns)',\n    'csv': 'CSV (comma-separated)'\n};\n// OCR Model configurations\nconst OCR_MODELS = {\n    'fast': {\n        name: 'Fast Mode',\n        description: 'Quick results with good accuracy',\n        engineConfig: {\n            tessedit_pageseg_mode: '3',\n            preserve_interword_spaces: '1',\n            tessjs_create_hocr: '0',\n            tessjs_create_tsv: '0',\n            textord_heavy_nr: '1',\n            textord_min_linesize: '3.0'\n        },\n        preprocessConfigs: [\n            {\n                enabled: false,\n                grayscale: false,\n                contrast: 1,\n                binarize: false,\n                threshold: 128,\n                scale: 1,\n                deskew: false,\n                denoise: false,\n                adaptiveThreshold: false,\n                sharpen: false\n            },\n            {\n                enabled: true,\n                grayscale: true,\n                contrast: 1.2,\n                binarize: false,\n                threshold: 150,\n                scale: 1.0,\n                deskew: false,\n                denoise: false,\n                adaptiveThreshold: false,\n                sharpen: true\n            }\n        ]\n    },\n    'mcq': {\n        name: 'MCQ Optimized',\n        description: 'Best for multiple-choice questions',\n        engineConfig: {\n            tessedit_pageseg_mode: '6',\n            preserve_interword_spaces: '1',\n            tessjs_create_hocr: '1',\n            tessjs_create_tsv: '0',\n            textord_tabfind_find_tables: '0',\n            tessedit_char_whitelist: '',\n            tessedit_fix_fuzzy_spaces: '1',\n            textord_space_size_is_variable: '1',\n            textord_min_linesize: '2.0',\n            tessedit_prefer_joined_punct: '0',\n            tessedit_write_block_separators: '1',\n            tessedit_enable_doc_dict: '1',\n            tessedit_unrej_any_wd: '1',\n            edges_max_children_per_outline: '40',\n            tessedit_char_blacklist: 'il│|¦'\n        },\n        preprocessConfigs: [\n            {\n                enabled: false,\n                grayscale: false,\n                contrast: 1,\n                binarize: false,\n                threshold: 128,\n                scale: 1,\n                deskew: false,\n                denoise: false,\n                adaptiveThreshold: false,\n                sharpen: false\n            },\n            {\n                enabled: true,\n                grayscale: true,\n                contrast: 1.5,\n                binarize: false,\n                threshold: 150,\n                scale: 2.0,\n                deskew: true,\n                denoise: false,\n                adaptiveThreshold: false,\n                sharpen: true\n            },\n            {\n                enabled: true,\n                grayscale: true,\n                contrast: 1.8,\n                binarize: true,\n                threshold: 175,\n                scale: 2.5,\n                deskew: true,\n                denoise: true,\n                adaptiveThreshold: false,\n                sharpen: true\n            }\n        ]\n    },\n    'balanced': {\n        name: 'Balanced',\n        description: 'Good mix of speed and accuracy',\n        engineConfig: {\n            tessedit_pageseg_mode: '6',\n            preserve_interword_spaces: '1',\n            tessjs_create_hocr: '1',\n            tessjs_create_tsv: '1',\n            tessedit_fix_fuzzy_spaces: '1',\n            textord_min_linesize: '2.5',\n            tessedit_enable_doc_dict: '1'\n        },\n        preprocessConfigs: [\n            {\n                enabled: false,\n                grayscale: false,\n                contrast: 1,\n                binarize: false,\n                threshold: 128,\n                scale: 1,\n                deskew: false,\n                denoise: false,\n                adaptiveThreshold: false,\n                sharpen: false\n            },\n            {\n                enabled: true,\n                grayscale: true,\n                contrast: 1.3,\n                binarize: false,\n                threshold: 150,\n                scale: 1.5,\n                deskew: true,\n                denoise: false,\n                adaptiveThreshold: false,\n                sharpen: true\n            },\n            {\n                enabled: true,\n                grayscale: true,\n                contrast: 1.4,\n                binarize: true,\n                threshold: 160,\n                scale: 1.8,\n                deskew: true,\n                denoise: true,\n                adaptiveThreshold: false,\n                sharpen: false\n            }\n        ]\n    },\n    'ultra-accurate': {\n        name: 'Ultra Accurate',\n        description: 'Advanced precision with AI enhancement',\n        engineConfig: {\n            tessedit_pageseg_mode: '6',\n            tessedit_char_whitelist: '',\n            preserve_interword_spaces: '1',\n            tessjs_create_hocr: '1',\n            tessjs_create_tsv: '1',\n            textord_tabfind_find_tables: '1',\n            textord_tablefind_recognize_tables: '1',\n            tessedit_do_invert: '0',\n            tessedit_fix_fuzzy_spaces: '1',\n            textord_space_size_is_variable: '1',\n            tessedit_preserve_min_wd_len: '2',\n            tessedit_prefer_joined_punct: '0',\n            tessedit_write_block_separators: '1',\n            tessedit_write_rep_codes: '1',\n            tessedit_write_unlv: '1',\n            textord_min_linesize: '2.5',\n            textord_heavy_nr: '0',\n            hocr_font_info: '1',\n            tessedit_enable_doc_dict: '1',\n            tessedit_unrej_any_wd: '1',\n            tessedit_create_txt: '1',\n            tessedit_create_hocr: '1',\n            tessedit_char_blacklist: 'il│|¦',\n            edges_max_children_per_outline: '40',\n            edges_children_per_grandchild: '10.0'\n        },\n        preprocessConfigs: [\n            {\n                enabled: false,\n                grayscale: false,\n                contrast: 1,\n                binarize: false,\n                threshold: 128,\n                scale: 1,\n                deskew: false,\n                denoise: false,\n                adaptiveThreshold: false,\n                sharpen: false\n            },\n            // Clean text configuration\n            {\n                enabled: true,\n                grayscale: true,\n                contrast: 1.5,\n                binarize: false,\n                threshold: 150,\n                scale: 2.0,\n                deskew: true,\n                denoise: false,\n                adaptiveThreshold: false,\n                sharpen: true\n            },\n            // Adaptive threshold for better accuracy\n            {\n                enabled: true,\n                grayscale: true,\n                contrast: 1.3,\n                binarize: true,\n                threshold: 150,\n                scale: 2.2,\n                deskew: true,\n                denoise: true,\n                adaptiveThreshold: true,\n                sharpen: false\n            },\n            // High contrast mode for difficult text\n            {\n                enabled: true,\n                grayscale: true,\n                contrast: 1.8,\n                binarize: true,\n                threshold: 180,\n                scale: 2.5,\n                deskew: true,\n                denoise: true,\n                adaptiveThreshold: true,\n                sharpen: true\n            },\n            // Special MCQ configuration \n            {\n                enabled: true,\n                grayscale: true,\n                contrast: 2.0,\n                binarize: true,\n                threshold: 200,\n                scale: 3.0,\n                deskew: true,\n                denoise: false,\n                adaptiveThreshold: false,\n                sharpen: true\n            }\n        ]\n    }\n};\nfunction ImageToText() {\n    _s();\n    const [images, setImages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [combinedText, setCombinedText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [isProcessing, setIsProcessing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [selectedLanguage, setSelectedLanguage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('eng');\n    const [useAiEnhancement, setUseAiEnhancement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [tableFormat, setTableFormat] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('formatted');\n    const [detectTables, setDetectTables] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [selectedModel, setSelectedModel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('balanced');\n    const [isDragActive, setIsDragActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Preprocessing options\n    const [preprocessing, setPreprocessing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        enabled: false,\n        grayscale: true,\n        contrast: 1,\n        binarize: false,\n        threshold: 128,\n        scale: 1.5,\n        deskew: true,\n        denoise: false,\n        adaptiveThreshold: false,\n        sharpen: false\n    });\n    // Track processing metrics\n    const [processingMetrics, setProcessingMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const fileInputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const dropAreaRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const toast = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.useToast)();\n    // Handle file selection\n    const handleFileSelect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ImageToText.useCallback[handleFileSelect]\": (files)=>{\n            if (!files || files.length === 0) return;\n            // Check if adding these files would exceed the limit\n            if (images.length + files.length > MAX_IMAGES) {\n                toast({\n                    title: 'Maximum images exceeded',\n                    description: \"You can only upload a maximum of \".concat(MAX_IMAGES, \" images at once.\"),\n                    status: 'error',\n                    duration: 5000,\n                    isClosable: true\n                });\n                return;\n            }\n            const newImages = Array.from(files).filter({\n                \"ImageToText.useCallback[handleFileSelect].newImages\": (file)=>ACCEPTED_FILE_TYPES.includes(file.type)\n            }[\"ImageToText.useCallback[handleFileSelect].newImages\"]).map({\n                \"ImageToText.useCallback[handleFileSelect].newImages\": (file)=>({\n                        id: Math.random().toString(36).substring(2, 9),\n                        file,\n                        preview: URL.createObjectURL(file)\n                    })\n            }[\"ImageToText.useCallback[handleFileSelect].newImages\"]);\n            if (newImages.length < files.length) {\n                toast({\n                    title: 'Some files were rejected',\n                    description: 'Only JPEG, PNG, WEBP, GIF, and BMP files are supported.',\n                    status: 'warning',\n                    duration: 5000,\n                    isClosable: true\n                });\n            }\n            setImages({\n                \"ImageToText.useCallback[handleFileSelect]\": (prev)=>[\n                        ...prev,\n                        ...newImages\n                    ]\n            }[\"ImageToText.useCallback[handleFileSelect]\"]);\n        }\n    }[\"ImageToText.useCallback[handleFileSelect]\"], [\n        images.length,\n        toast\n    ]);\n    // Handle file input change\n    const handleFileInputChange = (e)=>{\n        if (e.target.files && e.target.files.length > 0) {\n            handleFileSelect(e.target.files);\n            // Reset the file input\n            if (fileInputRef.current) fileInputRef.current.value = '';\n        }\n    };\n    // Handle file drag and drop\n    const handleDragOver = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ImageToText.useCallback[handleDragOver]\": (e)=>{\n            e.preventDefault();\n            setIsDragActive(true);\n        }\n    }[\"ImageToText.useCallback[handleDragOver]\"], []);\n    const handleDragLeave = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ImageToText.useCallback[handleDragLeave]\": (e)=>{\n            e.preventDefault();\n            setIsDragActive(false);\n        }\n    }[\"ImageToText.useCallback[handleDragLeave]\"], []);\n    const handleDrop = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ImageToText.useCallback[handleDrop]\": (e)=>{\n            e.preventDefault();\n            setIsDragActive(false);\n            handleFileSelect(e.dataTransfer.files);\n        }\n    }[\"ImageToText.useCallback[handleDrop]\"], [\n        handleFileSelect\n    ]);\n    // Handle paste from clipboard\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ImageToText.useEffect\": ()=>{\n            const handlePaste = {\n                \"ImageToText.useEffect.handlePaste\": (e)=>{\n                    var _e_clipboardData;\n                    const items = (_e_clipboardData = e.clipboardData) === null || _e_clipboardData === void 0 ? void 0 : _e_clipboardData.items;\n                    if (!items) return;\n                    const imageItems = Array.from(items).filter({\n                        \"ImageToText.useEffect.handlePaste.imageItems\": (item)=>item.type.indexOf('image') !== -1\n                    }[\"ImageToText.useEffect.handlePaste.imageItems\"]);\n                    if (imageItems.length > 0) {\n                        const fileList = [];\n                        for (const item of imageItems){\n                            const file = item.getAsFile();\n                            if (file) fileList.push(file);\n                        }\n                        // Create a FileList-like object\n                        const fileListObj = {\n                            length: fileList.length,\n                            item: {\n                                \"ImageToText.useEffect.handlePaste\": (i)=>fileList[i]\n                            }[\"ImageToText.useEffect.handlePaste\"],\n                            [Symbol.iterator]: {\n                                \"ImageToText.useEffect.handlePaste\": function*() {\n                                    for(let i = 0; i < this.length; i++)yield this.item(i);\n                                }\n                            }[\"ImageToText.useEffect.handlePaste\"]\n                        };\n                        handleFileSelect(fileList.length > 0 ? fileListObj : null);\n                    }\n                }\n            }[\"ImageToText.useEffect.handlePaste\"];\n            document.addEventListener('paste', handlePaste);\n            return ({\n                \"ImageToText.useEffect\": ()=>{\n                    document.removeEventListener('paste', handlePaste);\n                }\n            })[\"ImageToText.useEffect\"];\n        }\n    }[\"ImageToText.useEffect\"], [\n        handleFileSelect\n    ]);\n    // Remove an image from the list\n    const removeImage = (id)=>{\n        setImages((prev)=>prev.filter((img)=>img.id !== id));\n    };\n    // Preprocess image to improve OCR accuracy\n    const preprocessImage = (imageUrl, options)=>{\n        return new Promise((resolve, reject)=>{\n            const canvas = canvasRef.current;\n            if (!canvas) {\n                // Create canvas if it doesn't exist\n                const newCanvas = document.createElement('canvas');\n                newCanvas.style.display = 'none';\n                document.body.appendChild(newCanvas);\n                if (!canvasRef.current) {\n                    canvasRef.current = newCanvas;\n                }\n            }\n            const ctx = canvasRef.current.getContext('2d');\n            if (!ctx) {\n                reject(new Error('Could not get canvas context'));\n                return;\n            }\n            const img = new window.Image();\n            img.crossOrigin = 'Anonymous';\n            img.onload = ()=>{\n                try {\n                    // Set canvas dimensions to match the image\n                    const scale = options.scale || 1;\n                    canvasRef.current.width = img.width * scale;\n                    canvasRef.current.height = img.height * scale;\n                    // Clear the canvas\n                    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n                    // Draw the original image with scaling\n                    ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\n                    // Apply advanced preprocessing techniques\n                    // 1. Apply grayscale if enabled\n                    if (options.grayscale) {\n                        const imageData = ctx.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height);\n                        const data = imageData.data;\n                        // Use weighted grayscale method for better text-background contrast\n                        for(let i = 0; i < data.length; i += 4){\n                            // Use ITU-R BT.709 coefficients for better text readability\n                            const gray = 0.2126 * data[i] + 0.7152 * data[i + 1] + 0.0722 * data[i + 2];\n                            data[i] = data[i + 1] = data[i + 2] = gray;\n                        }\n                        ctx.putImageData(imageData, 0, 0);\n                    }\n                    // 2. Apply denoising for cleaner text\n                    // Simple but effective way to reduce noise while keeping text sharp\n                    const imageData = ctx.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height);\n                    const data = imageData.data;\n                    const width = canvasRef.current.width;\n                    const height = canvasRef.current.height;\n                    const tempData = new Uint8ClampedArray(data);\n                    // Simple median filter for noise reduction (3x3 kernel)\n                    if (options.denoise) {\n                        for(let y = 1; y < height - 1; y++){\n                            for(let x = 1; x < width - 1; x++){\n                                for(let c = 0; c < 3; c++){\n                                    const i = (y * width + x) * 4 + c;\n                                    // Collect 9 neighboring pixels\n                                    const neighbors = [\n                                        tempData[i - width * 4 - 4],\n                                        tempData[i - width * 4],\n                                        tempData[i - width * 4 + 4],\n                                        tempData[i - 4],\n                                        tempData[i],\n                                        tempData[i + 4],\n                                        tempData[i + width * 4 - 4],\n                                        tempData[i + width * 4],\n                                        tempData[i + width * 4 + 4]\n                                    ];\n                                    // Sort and take the median value\n                                    neighbors.sort((a, b)=>a - b);\n                                    data[i] = neighbors[4];\n                                }\n                                // Keep alpha channel unchanged\n                                data[(y * width + x) * 4 + 3] = tempData[(y * width + x) * 4 + 3];\n                            }\n                        }\n                        ctx.putImageData(imageData, 0, 0);\n                    }\n                    // 3. Apply contrast adjustment with improved algorithm\n                    if (options.contrast !== 1) {\n                        const imageData = ctx.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height);\n                        const data = imageData.data;\n                        // Find the average brightness to improve contrast adjustment\n                        let avgBrightness = 0;\n                        for(let i = 0; i < data.length; i += 4){\n                            avgBrightness += data[i];\n                        }\n                        avgBrightness /= data.length / 4;\n                        // Apply contrast with respect to the image's average brightness\n                        const factor = 259 * (options.contrast * 100 + 255) / (255 * (259 - options.contrast * 100));\n                        for(let i = 0; i < data.length; i += 4){\n                            data[i] = factor * (data[i] - avgBrightness) + avgBrightness;\n                            data[i + 1] = factor * (data[i + 1] - avgBrightness) + avgBrightness;\n                            data[i + 2] = factor * (data[i + 2] - avgBrightness) + avgBrightness;\n                        }\n                        ctx.putImageData(imageData, 0, 0);\n                    }\n                    // 4. Apply binarization with adaptive thresholding for better text extraction\n                    if (options.binarize) {\n                        const imageData = ctx.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height);\n                        const data = imageData.data;\n                        const width = canvasRef.current.width;\n                        const height = canvasRef.current.height;\n                        // Get global threshold value from options\n                        const globalThreshold = options.threshold;\n                        // Use adaptive thresholding if enabled\n                        if (options.adaptiveThreshold) {\n                            const kernelSize = 15; // Size of local neighborhood\n                            const C = 5; // Constant subtracted from the mean\n                            for(let y = 0; y < height; y++){\n                                for(let x = 0; x < width; x++){\n                                    // Calculate local mean in a neighborhood\n                                    let sum = 0;\n                                    let count = 0;\n                                    for(let ky = Math.max(0, y - kernelSize); ky < Math.min(height, y + kernelSize); ky++){\n                                        for(let kx = Math.max(0, x - kernelSize); kx < Math.min(width, x + kernelSize); kx++){\n                                            sum += data[(ky * width + kx) * 4];\n                                            count++;\n                                        }\n                                    }\n                                    // Calculate local threshold\n                                    const localThreshold = sum / count - C;\n                                    // Get current pixel index\n                                    const idx = (y * width + x) * 4;\n                                    // Apply thresholding\n                                    const val = data[idx] < localThreshold ? 0 : 255;\n                                    data[idx] = data[idx + 1] = data[idx + 2] = val;\n                                }\n                            }\n                        } else {\n                            // Simple global thresholding\n                            for(let i = 0; i < data.length; i += 4){\n                                const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n                                const val = avg >= globalThreshold ? 255 : 0;\n                                data[i] = data[i + 1] = data[i + 2] = val;\n                            }\n                        }\n                        ctx.putImageData(imageData, 0, 0);\n                    }\n                    // 5. Apply sharpening to improve text edges\n                    if (options.sharpen) {\n                        const imageData = ctx.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height);\n                        const data = imageData.data;\n                        const width = canvasRef.current.width;\n                        const height = canvasRef.current.height;\n                        const tempData = new Uint8ClampedArray(data);\n                        // Unsharp masking\n                        const amount = 1.5; // Sharpening strength\n                        const radius = 1; // Radius of effect\n                        const threshold = 10; // Minimum brightness change\n                        for(let y = radius; y < height - radius; y++){\n                            for(let x = radius; x < width - radius; x++){\n                                for(let c = 0; c < 3; c++){\n                                    const i = (y * width + x) * 4 + c;\n                                    // Calculate local average\n                                    let blurred = 0;\n                                    let wSum = 0;\n                                    for(let ky = -radius; ky <= radius; ky++){\n                                        for(let kx = -radius; kx <= radius; kx++){\n                                            const weight = (radius - Math.abs(kx)) * (radius - Math.abs(ky));\n                                            blurred += tempData[i + (ky * width + kx) * 4] * weight;\n                                            wSum += weight;\n                                        }\n                                    }\n                                    blurred = blurred / wSum;\n                                    // Calculate the difference\n                                    const diff = tempData[i] - blurred;\n                                    // Apply sharpening only if difference is above threshold\n                                    if (Math.abs(diff) > threshold) {\n                                        data[i] = Math.min(255, Math.max(0, tempData[i] + diff * amount));\n                                    }\n                                }\n                            }\n                        }\n                        ctx.putImageData(imageData, 0, 0);\n                    }\n                    // Create data URL from canvas\n                    const preprocessedImageUrl = canvasRef.current.toDataURL('image/png');\n                    resolve(preprocessedImageUrl);\n                } catch (error) {\n                    console.error('Error preprocessing image:', error);\n                    reject(error);\n                }\n            };\n            img.onerror = (error)=>{\n                reject(error);\n            };\n            img.src = imageUrl;\n        });\n    };\n    // Process images with Tesseract OCR\n    const processImages = async ()=>{\n        if (images.length === 0 || isProcessing) return;\n        try {\n            setIsProcessing(true);\n            setCombinedText('');\n            const startTime = Date.now();\n            // Create a worker for OCR processing with enhanced settings\n            const worker = await (0,tesseract_js__WEBPACK_IMPORTED_MODULE_2__.createWorker)({\n                logger: (m)=>console.log(m),\n                langPath: 'https://tessdata.projectnaptha.com/4.0.0',\n                gzip: true,\n                workerBlobURL: true\n            });\n            // Load selected language\n            await worker.loadLanguage(selectedLanguage);\n            await worker.initialize(selectedLanguage);\n            // Get the selected model configuration\n            const modelConfig = OCR_MODELS[selectedModel];\n            // Set parameters based on selected model\n            try {\n                await worker.setParameters(modelConfig.engineConfig);\n            } catch (e) {\n                console.warn('Some Tesseract parameters may not be supported:', e);\n            // Continue even if some parameters are not supported\n            }\n            const extractedTexts = [];\n            let avgConfidence = 0;\n            // Process each image sequentially\n            for(let i = 0; i < images.length; i++){\n                const image = images[i];\n                try {\n                    // Update progress\n                    setProgress((i + 1) / images.length * 100);\n                    // Update current image status\n                    setImages((prev)=>prev.map((img)=>img.id === image.id ? {\n                                ...img,\n                                processing: true,\n                                error: undefined\n                            } : img));\n                    // Try all preprocessing configurations from the model\n                    let bestText = '';\n                    let bestConfidence = -1;\n                    // Use configurations from the selected model\n                    const preprocessingConfigs = modelConfig.preprocessConfigs;\n                    // For MCQ model, run additional specialized recognition\n                    const isMCQ = selectedModel === 'mcq' || image.preview && await checkIsMCQ(image.preview);\n                    // Try each preprocessing configuration\n                    for (const config of preprocessingConfigs){\n                        try {\n                            // Preprocess image with current configuration\n                            let imageSource = image.preview;\n                            if (config.enabled) {\n                                const preprocessedUrl = await preprocessImage(image.preview, config);\n                                imageSource = preprocessedUrl;\n                            }\n                            // Perform OCR with current configuration\n                            const result = await worker.recognize(imageSource);\n                            // Check if this result is better than our current best\n                            if (result.data.confidence > bestConfidence) {\n                                bestConfidence = result.data.confidence;\n                                bestText = result.data.text;\n                                // Save the preprocessing result for the best configuration\n                                if (config.enabled) {\n                                    setImages((prev)=>prev.map((img)=>img.id === image.id ? {\n                                                ...img,\n                                                preprocessed: imageSource\n                                            } : img));\n                                }\n                                // Also save the TSV data if available\n                                if (result.data.tsv && detectTables) {\n                                    const tableData = processTableData(result.data.tsv, tableFormat);\n                                    if (tableData && tableData.trim()) {\n                                        // If table detected, use it instead\n                                        bestText = tableData;\n                                    }\n                                }\n                            }\n                        } catch (error) {\n                            console.error('Error with preprocessing config:', error);\n                        // Continue to next configuration\n                        }\n                    }\n                    // If MCQ detected and we're not already using the MCQ model, try specialized settings\n                    if (isMCQ && selectedModel !== 'mcq') {\n                        console.log('MCQ format detected, applying specialized processing');\n                        // Temporarily change to MCQ mode for better recognition\n                        const mcqConfig = OCR_MODELS['mcq'];\n                        try {\n                            // Apply MCQ-specific parameters\n                            await worker.setParameters(mcqConfig.engineConfig);\n                            // Try MCQ-specific preprocessing configurations\n                            for (const config of mcqConfig.preprocessConfigs){\n                                try {\n                                    let imageSource = image.preview;\n                                    if (config.enabled) {\n                                        const preprocessedUrl = await preprocessImage(image.preview, config);\n                                        imageSource = preprocessedUrl;\n                                    }\n                                    // Perform OCR with MCQ configuration\n                                    const result = await worker.recognize(imageSource);\n                                    // Check if this result is better than our current best\n                                    if (result.data.confidence > bestConfidence) {\n                                        bestConfidence = result.data.confidence;\n                                        bestText = result.data.text;\n                                        // Save the preprocessing result\n                                        if (config.enabled) {\n                                            setImages((prev)=>prev.map((img)=>img.id === image.id ? {\n                                                        ...img,\n                                                        preprocessed: imageSource\n                                                    } : img));\n                                        }\n                                    }\n                                } catch (error) {\n                                    console.error('Error with MCQ preprocessing config:', error);\n                                }\n                            }\n                            // Restore original model parameters\n                            await worker.setParameters(modelConfig.engineConfig);\n                        } catch (error) {\n                            console.error('Error with specialized MCQ processing:', error);\n                        // Continue with the best result we have\n                        }\n                    }\n                    // Track average confidence\n                    avgConfidence += bestConfidence / images.length;\n                    // Process the extracted text\n                    let text = bestText;\n                    // If it's an MCQ, always apply MCQ enhancement\n                    if (isMCQ) {\n                        text = enhanceMCQText(text);\n                    } else if (useAiEnhancement) {\n                        text = await enhanceTextWithAI(text);\n                    }\n                    // Add extracted text to the array\n                    extractedTexts.push(text);\n                    // Update image with extracted text\n                    setImages((prev)=>prev.map((img)=>img.id === image.id ? {\n                                ...img,\n                                text,\n                                processing: false\n                            } : img));\n                } catch (error) {\n                    // Handle error for this specific image\n                    console.error(\"Error processing image \".concat(image.file.name, \":\"), error);\n                    setImages((prev)=>prev.map((img)=>img.id === image.id ? {\n                                ...img,\n                                processing: false,\n                                error: 'Failed to extract text'\n                            } : img));\n                    // Add placeholder for failed image\n                    extractedTexts.push(\"[Failed to extract text from \".concat(image.file.name, \"]\"));\n                }\n            }\n            // Combine all extracted texts\n            const combined = extractedTexts.join('\\n\\n');\n            setCombinedText(combined);\n            // Terminate the worker\n            await worker.terminate();\n            // Track processing metrics\n            const totalTime = (Date.now() - startTime) / 1000; // convert to seconds\n            setProcessingMetrics({\n                totalTime,\n                confidence: avgConfidence\n            });\n            toast({\n                title: 'Processing complete',\n                description: \"Successfully processed \".concat(images.length, \" images in \").concat(totalTime.toFixed(1), \"s.\"),\n                status: 'success',\n                duration: 5000,\n                isClosable: true\n            });\n        } catch (error) {\n            console.error('Error in OCR processing:', error);\n            toast({\n                title: 'Processing failed',\n                description: 'An error occurred during text extraction.',\n                status: 'error',\n                duration: 5000,\n                isClosable: true\n            });\n        } finally{\n            setIsProcessing(false);\n            setProgress(0);\n        }\n    };\n    // Basic check if an image contains MCQ content\n    const checkIsMCQ = async (imageUrl)=>{\n        try {\n            // Create a temporary worker just for detection\n            const detector = await (0,tesseract_js__WEBPACK_IMPORTED_MODULE_2__.createWorker)({\n                logger: (m)=>console.log(m),\n                langPath: 'https://tessdata.projectnaptha.com/4.0.0',\n                gzip: true,\n                workerBlobURL: true\n            });\n            await detector.loadLanguage('eng');\n            await detector.initialize('eng');\n            // Use simpler preprocessing for quick analysis\n            const preprocessedUrl = await preprocessImage(imageUrl, {\n                enabled: true,\n                grayscale: true,\n                contrast: 1.3,\n                binarize: false,\n                threshold: 128,\n                scale: 1.5,\n                deskew: true,\n                denoise: true,\n                adaptiveThreshold: false,\n                sharpen: true\n            });\n            // Recognize just a sample of the text\n            const result = await detector.recognize(preprocessedUrl);\n            // Clean up\n            await detector.terminate();\n            // Check for MCQ patterns in recognized text\n            const text = result.data.text;\n            // Look for typical MCQ patterns:\n            // 1. Multiple choice options (A, B, C, D pattern)\n            const hasOptionPattern = /[A-D][\\.\\)](\\s|\\n)/.test(text);\n            // 2. Numbered questions pattern\n            const hasNumberedQuestions = /\\d+[\\.\\)](\\s|\\n)/.test(text);\n            // 3. Question-like structure\n            const hasQuestionWords = /[Ww]hat|[Ff]ind|[Cc]alculate|[Ww]hich|[Ww]here|[Ww]hen|[Hh]ow/.test(text);\n            // Return true if it looks like an MCQ\n            return hasOptionPattern && hasNumberedQuestions || hasOptionPattern && hasQuestionWords;\n        } catch (error) {\n            console.error('Error checking if image is MCQ:', error);\n            return false; // Default to false if detection fails\n        }\n    };\n    // Process table data from TSV format\n    const processTableData = (tsv, format)=>{\n        try {\n            // Split TSV into rows\n            const rows = tsv.split('\\n').filter((row)=>row.trim() !== '');\n            if (rows.length <= 1) return null; // Not enough data for a table\n            // Check if this actually has tab structure\n            const hasTabs = rows.some((row)=>row.includes('\\t'));\n            if (!hasTabs) {\n                return analyzeAndFormatImplicitTable(rows.join('\\n'));\n            }\n            // Calculate column widths for proper alignment\n            const columns = rows[0].split('\\t');\n            const columnWidths = Array(columns.length).fill(0);\n            // Determine the maximum width for each column\n            rows.forEach((row)=>{\n                const cells = row.split('\\t');\n                cells.forEach((cell, i)=>{\n                    if (i < columnWidths.length) {\n                        columnWidths[i] = Math.max(columnWidths[i], cell.length);\n                    }\n                });\n            });\n            // Clean up rows - remove empty rows and handle merged cells\n            const cleanRows = rows.filter((row)=>{\n                const cells = row.split('\\t');\n                // Skip rows that are completely empty or just whitespace\n                return cells.some((cell)=>cell.trim().length > 0);\n            });\n            // Generate table based on selected format\n            switch(format){\n                case 'plain':\n                    // Simple space-separated format\n                    return cleanRows.map((row)=>{\n                        return row.split('\\t').join('  ');\n                    }).join('\\n');\n                case 'markdown':\n                    // Markdown table format\n                    let markdownTable = '';\n                    // Header row\n                    markdownTable += '| ' + cleanRows[0].split('\\t').join(' | ') + ' |\\n';\n                    // Header separator\n                    markdownTable += '| ' + columnWidths.map((w)=>'-'.repeat(Math.max(3, w))).join(' | ') + ' |\\n';\n                    // Data rows\n                    for(let i = 1; i < cleanRows.length; i++){\n                        markdownTable += '| ' + cleanRows[i].split('\\t').join(' | ') + ' |\\n';\n                    }\n                    return markdownTable;\n                case 'csv':\n                    // CSV format\n                    return cleanRows.map((row)=>{\n                        return row.split('\\t').map((cell)=>{\n                            // Escape quotes and wrap in quotes if contains comma\n                            if (cell.includes(',') || cell.includes('\"')) {\n                                return '\"'.concat(cell.replace(/\"/g, '\"\"'), '\"');\n                            }\n                            return cell;\n                        }).join(',');\n                    }).join('\\n');\n                case 'formatted':\n                default:\n                    // Default formatted table with aligned columns\n                    let formattedTable = '';\n                    // Format rows with padding\n                    cleanRows.forEach((row, rowIndex)=>{\n                        const cells = row.split('\\t');\n                        const formattedRow = cells.map((cell, i)=>{\n                            if (i < columnWidths.length) {\n                                // Right-align numbers, left-align text\n                                const isNumber = /^-?\\d+(\\.\\d+)?$/.test(cell.trim());\n                                return isNumber ? cell.padStart(columnWidths[i]) : cell.padEnd(columnWidths[i]);\n                            }\n                            return cell;\n                        }).join(' | ');\n                        formattedTable += formattedRow + '\\n';\n                        // Add separator after header\n                        if (rowIndex === 0) {\n                            formattedTable += columnWidths.map((w)=>'-'.repeat(w)).join('-+-') + '\\n';\n                        }\n                    });\n                    return formattedTable;\n            }\n        } catch (e) {\n            console.error('Error processing table data:', e);\n            return null;\n        }\n    };\n    // Analyze text that might contain a table without explicit tab separators\n    const analyzeAndFormatImplicitTable = (text)=>{\n        try {\n            // Split by lines\n            const lines = text.split('\\n').filter((line)=>line.trim());\n            if (lines.length < 2) return null;\n            // Step 1: Detect if this looks like a table by checking for consistent spacing\n            // Find positions where there are consistent spaces across multiple lines\n            const potentialDelimiterPositions = [];\n            for (const line of lines){\n                const positions = [];\n                for(let i = 0; i < line.length; i++){\n                    if (line[i] === ' ' && (i === 0 || line[i - 1] !== ' ')) {\n                        positions.push(i);\n                    }\n                }\n                potentialDelimiterPositions.push(positions);\n            }\n            // Find common positions across at least 70% of lines\n            const positionCounts = {};\n            for (const positions of potentialDelimiterPositions){\n                for (const pos of positions){\n                    positionCounts[pos] = (positionCounts[pos] || 0) + 1;\n                }\n            }\n            const threshold = Math.floor(lines.length * 0.7);\n            const commonPositions = Object.entries(positionCounts).filter((param)=>{\n                let [_, count] = param;\n                return count >= threshold;\n            }).map((param)=>{\n                let [pos, _] = param;\n                return parseInt(pos);\n            }).sort((a, b)=>a - b);\n            if (commonPositions.length < 1) {\n                // Not enough consistent spacing to be a table\n                return null;\n            }\n            // Step 2: Extract columns using the detected positions\n            const columns = [];\n            for (const line of lines){\n                const row = [];\n                let start = 0;\n                for (const pos of commonPositions){\n                    if (pos > start) {\n                        row.push(line.substring(start, pos).trim());\n                        start = pos;\n                    }\n                }\n                // Add the last column\n                if (start < line.length) {\n                    row.push(line.substring(start).trim());\n                }\n                columns.push(row);\n            }\n            // Step 3: Format as a table\n            // Find max width for each column\n            const columnCount = Math.max(...columns.map((row)=>row.length));\n            const columnWidths = Array(columnCount).fill(0);\n            for (const row of columns){\n                for(let i = 0; i < row.length; i++){\n                    var _row_i;\n                    columnWidths[i] = Math.max(columnWidths[i], ((_row_i = row[i]) === null || _row_i === void 0 ? void 0 : _row_i.length) || 0);\n                }\n            }\n            // Generate formatted table\n            let formattedTable = '';\n            // Format rows with padding\n            columns.forEach((row, rowIndex)=>{\n                const formattedRow = row.map((cell, i)=>{\n                    // Ensure cell is defined and handle alignment\n                    cell = cell || '';\n                    if (i < columnWidths.length) {\n                        // Right-align numbers, left-align text\n                        const isNumber = /^-?\\d+(\\.\\d+)?$/.test(cell.trim());\n                        return isNumber ? cell.padStart(columnWidths[i]) : cell.padEnd(columnWidths[i]);\n                    }\n                    return cell;\n                }).join(' | ');\n                formattedTable += formattedRow + '\\n';\n                // Add separator after header\n                if (rowIndex === 0) {\n                    formattedTable += columnWidths.map((w)=>'-'.repeat(w)).join('-+-') + '\\n';\n                }\n            });\n            return formattedTable;\n        } catch (error) {\n            console.error('Error analyzing implicit table:', error);\n            return null;\n        }\n    };\n    // AI enhancement of extracted text\n    const enhanceTextWithAI = async (text)=>{\n        // If no text, return empty string\n        if (!text) return '';\n        let enhancedText = text;\n        // Check if text contains a multiple choice question pattern\n        const hasMCQPattern = RegExp(\"(?:\\\\d+\\\\s*[\\\\.\\\\)]\\\\s*.*?\\\\n\\\\s*(?:[A-Z][\\\\.\\\\)]\\\\s*.*?\\\\n){2,})\", \"s\").test(text) || RegExp(\"(?:\\\\n\\\\s*[A-Z][\\\\.\\\\)]\\\\s*.*?){3,}\", \"s\").test(text);\n        // Check if text contains mathematical content\n        const hasMathContent = /((?:\\d+\\s*[+\\-×÷=\\^])|(?:\\d+\\.\\d+)|(?:\\(\\d+\\))|(?:[<>]=?)|(?:\\d+\\s*\\/\\s*\\d+))/g.test(text);\n        // Apply specialized enhancements based on content type\n        if (selectedModel === 'mcq' || hasMCQPattern) {\n            enhancedText = enhanceMCQText(enhancedText);\n        }\n        if (hasMathContent || selectedModel === 'high-accuracy') {\n            enhancedText = enhanceMathText(enhancedText);\n        }\n        // Process data that looks like a table\n        if (enhancedText.includes('\\t') || enhancedText.split('\\n').some((line)=>line.includes('  ') && /\\d/.test(line))) {\n            const tableData = processTableData(enhancedText, tableFormat);\n            if (tableData) {\n                enhancedText = tableData;\n            }\n        } else if (detectTables) {\n            // Try to detect implicit tables (no tabs, but consistently spaced content)\n            const potentialTable = analyzeAndFormatImplicitTable(enhancedText);\n            if (potentialTable) {\n                enhancedText = potentialTable;\n            }\n        }\n        // Final cleanups\n        enhancedText = enhancedText// Standardize newlines\n        .replace(/\\r\\n/g, '\\n')// Fix spaces before punctuation\n        .replace(/\\s+([.,;:!?])/g, '$1')// Fix common OCR errors\n        .replace(/([a-z])\\/([a-z])/gi, '$1l$2') // Fix 'l' recognized as '/'\n        // Fix broken words at line breaks with hyphen\n        .replace(/(\\w+)-\\n(\\w+)/g, '$1$2\\n')// Add space after sentences\n        .replace(/([.!?])([A-Z])/g, '$1 $2')// Fix spacing around special characters\n        .replace(/\\s*([+\\-=*\\/])\\s*/g, ' $1 ');\n        return enhancedText;\n    };\n    // Special processing for multiple-choice questions\n    const enhanceMCQText = (text)=>{\n        // STAGE 1: Pre-processing and pattern detection\n        // 1.1: Identify if this is a common aptitude test format\n        const isAptitudeTest = /(?:multiple|average|length|shadow|height|building|number|calculate|find)/i.test(text);\n        // 1.2: Normalize whitespace and line breaks\n        text = text.replace(/\\n{3,}/g, '\\n\\n'); // Reduce excessive line breaks\n        text = text.replace(/[ \\t]{2,}/g, ' '); // Normalize multiple spaces\n        // 1.3: Detect specific question patterns\n        const containsNumberedQuestions = /\\d+[\\.\\)]\\s+[A-Za-z]/.test(text);\n        const containsMCQOptions = /[A-D][\\.\\)]\\s+\\w/.test(text);\n        const containsWordSynonymQuestions = /(?:closest|opposite|meaning|synonym|antonym)/i.test(text);\n        // 1.4: Fix common scanning issues with MCQ option labels\n        text = text.replace(/\\b([oO0])[\\.\\)]\\s+/g, 'D. '); // Replace o. or 0. with D.\n        text = text.replace(/\\b([®Θ@])\\s*/g, 'A. '); // Replace common OCR errors for A\n        text = text.replace(/\\b([©])\\s*/g, 'C. '); // Replace © with C\n        // 1.5: Special handling for word meaning/synonym/antonym format\n        if (containsWordSynonymQuestions) {\n            // Find WORD patterns (all caps word followed by options)\n            text = text.replace(/([A-Z]{2,})\\s*\\n/g, '$1\\n\\n');\n            // Fix option formatting for word meaning questions\n            text = text.replace(/(?:Opts|Opc|Opp|0ps)[:;.,]?\\s*/gi, 'Options: ');\n            // Make sure the question text is properly formatted\n            text = text.replace(/(?:Q|0)\\s*(\\d+)[\\.\\)]\\s*/gi, 'Q $1) ');\n            // Format \"WORD\" patterns to stand out\n            text = text.replace(/(?:HOSTILE|GROVEL|[A-Z]{3,})/g, (match)=>\"\\n\".concat(match, \"\\n\"));\n        }\n        // STAGE 2: Content-specific fixes\n        // 2.1: Fix numeric recognition (especially important for aptitude tests)\n        if (isAptitudeTest) {\n            // Fix for aptitude test number formats\n            text = text.replace(/(\\d+)[\\s\\.]?[,;][\\s\\.]?(\\d+)/g, '$1.$2'); // Fix decimal points\n            text = text.replace(/(\\d+)l(\\d+)/g, '$1$2'); // Fix l that should be 1 in numbers\n            text = text.replace(/l(\\d+)/g, '1$2'); // Fix l that should be 1 at start of numbers\n            text = text.replace(/(\\d+)l/g, '$1'); // Remove trailing l in numbers\n            text = text.replace(/(\\d+)[iI](\\d+)/g, '$1$2'); // Fix i/I that should be in numbers\n            text = text.replace(/(\\d+)z(\\d+)/g, '$1$2'); // Fix z that should be 2 in numbers\n            text = text.replace(/(\\d+)[sS](\\d+)/g, '$1$2'); // Fix s/S that should be 5 in numbers\n            text = text.replace(/(\\d+)O(\\d+)/g, '$1$2'); // Fix O that should be 0 in numbers\n            text = text.replace(/(\\d+)o(\\d+)/g, '$1$2'); // Fix o that should be 0 in numbers\n            // Fix for common decimal point issues\n            text = text.replace(/(\\d+)[\\s]*\\.[\\s]*(\\d+)/g, '$1.$2'); // Normalize decimal points\n            // Fix for fractions and units\n            text = text.replace(/(\\d+)[\\s]*\\/[\\s]*(\\d+)/g, '$1/$2'); // Fix fractions\n            text = text.replace(/(\\d+)[\\s]*m(?:\\s|$|\\n)/g, '$1 m '); // Fix meters\n            text = text.replace(/(\\d+)[\\s]*cm(?:\\s|$|\\n)/g, '$1 cm '); // Fix centimeters\n            // Fix number ranges\n            text = text.replace(/(\\d+)\\s*-\\s*(\\d+)/g, '$1-$2'); // Fix ranges\n        }\n        // 2.2: Fix option labels - standardize them to \"A. \" format\n        text = text.replace(/\\b([A-D])[\\.\\)]\\s*/g, '$1. '); // Convert both A) and A. to A. with space\n        text = text.replace(/\\(([A-D])\\)\\s*/g, '$1. '); // Convert (A) to A.\n        // 2.3: Fix common layout issues where options are not properly spaced\n        text = text.replace(/([.)])\\s*([A-D][.)])/g, '$1\\n$2'); // Add newline between question and first option\n        // 2.4: Fix option formatting consistency\n        text = text.replace(/(\\d+)\\s*[\\)\\.]\\s*([A-Za-z])/g, '$1) $2'); // Add proper spacing after question numbers\n        // 2.5: Fix option alignment - ensure options are on separate lines\n        text = text.replace(/([A-D])\\.\\s+([^A-D\\n]+)([A-D])\\./g, '$1. $2\\n$3.'); // Separate run-together options\n        // 2.6: Handle multi-column layout\n        // Detect if we have multiple columns of MCQs\n        if (text.includes(\"Q 21\") && text.includes(\"Q 22\")) {\n            // Try to split text into left and right columns\n            const lines = text.split('\\n');\n            const columnLines = {\n                left: [],\n                right: []\n            };\n            // Identify which lines belong to which column\n            for(let i = 0; i < lines.length; i++){\n                const line = lines[i].trim();\n                if (line.match(/Q\\s*2[12]\\./)) {\n                    // This suggests we're at the start of our columns\n                    // Process the rest of the lines as columns\n                    let currentColumn = 'left';\n                    for(let j = i; j < lines.length; j++){\n                        const currentLine = lines[j].trim();\n                        // If we see a line with \"Q 22\", switch to right column\n                        if (currentLine.match(/Q\\s*22\\./)) {\n                            currentColumn = 'right';\n                        }\n                        // Add to appropriate column\n                        if (currentColumn === 'left') {\n                            columnLines.left.push(currentLine);\n                        } else {\n                            columnLines.right.push(currentLine);\n                        }\n                    }\n                    break;\n                } else {\n                    // Add to left column by default for header content\n                    columnLines.left.push(line);\n                }\n            }\n            // If we successfully identified columns, reformat them sequentially\n            if (columnLines.left.length > 0 && columnLines.right.length > 0) {\n                const leftText = columnLines.left.join('\\n');\n                const rightText = columnLines.right.join('\\n');\n                // Reassemble text with columns in sequence\n                text = leftText + '\\n\\n' + rightText;\n            }\n        }\n        // STAGE 3: Structure analysis and repair\n        // Split text into lines for more precise processing\n        let lines = text.split('\\n');\n        let processedLines = [];\n        let inQuestion = false;\n        let questionIndex = 0;\n        let optionCount = 0;\n        let previousLine = '';\n        for(let i = 0; i < lines.length; i++){\n            let line = lines[i].trim();\n            // Skip empty lines\n            if (!line) {\n                // Only add one empty line between questions\n                if (processedLines.length > 0 && processedLines[processedLines.length - 1] !== '') {\n                    processedLines.push('');\n                }\n                continue;\n            }\n            // Detect question pattern (number followed by text)\n            if (/^(\\d+|Q\\s*\\d+)[\\.)\\]]?\\s/.test(line)) {\n                // Extract the question number\n                const match = line.match(/(\\d+)/);\n                if (match) {\n                    questionIndex = parseInt(match[1], 10);\n                }\n                inQuestion = true;\n                optionCount = 0;\n                // Standardize question format\n                line = line.replace(/^(Q\\s*)?(\\d+)[\\.)\\]]?\\s/, '$2) ');\n                processedLines.push(line);\n                previousLine = line;\n            } else if (/^[A-Da-d][\\.)\\]]\\s/.test(line)) {\n                // Convert to standard option format and make uppercase\n                line = line.replace(/^([A-Da-d])[\\.)\\]]\\s/, (_, letter)=>letter.toUpperCase() + '. ');\n                optionCount++;\n                processedLines.push(line);\n                previousLine = line;\n            } else if (/^[A-Z]{3,}$/.test(line)) {\n                // This is likely a target word for word meaning questions\n                if (processedLines.length > 0 && processedLines[processedLines.length - 1] !== '') {\n                    processedLines.push('');\n                }\n                processedLines.push(line);\n                if (processedLines.length > 0 && processedLines[processedLines.length - 1] !== '') {\n                    processedLines.push('');\n                }\n                previousLine = line;\n            } else if (inQuestion && /^[^A-Da-d\\d]?[A-Da-d][^A-Da-d\\d]?\\s/.test(line)) {\n                // Try to extract the option letter\n                const match = line.match(/[A-Da-d]/);\n                if (match) {\n                    const letter = match[0].toUpperCase();\n                    // Replace the entire matched pattern with the standard format\n                    line = line.replace(/^[^A-Da-d\\d]?[A-Da-d][^A-Da-d\\d]?\\s/, letter + '. ');\n                    optionCount++;\n                    processedLines.push(line);\n                    previousLine = line;\n                } else {\n                    // It was a false positive, treat as a continuation of the previous line\n                    if (previousLine && (previousLine.startsWith(questionIndex + ')') || /^[A-D]\\./.test(previousLine))) {\n                        // Append to the previous line\n                        processedLines[processedLines.length - 1] += ' ' + line;\n                    } else {\n                        processedLines.push(line);\n                    }\n                    previousLine = line;\n                }\n            } else if (/^[Oo]pt(?:ion)?s?:/.test(line)) {\n                // This is an options label, standardize it\n                processedLines.push(\"Options:\");\n                previousLine = line;\n            } else if (previousLine && !line.startsWith(questionIndex + ')') && !/^[A-D]\\./.test(line) && (previousLine.startsWith(questionIndex + ')') || /^[A-D]\\./.test(previousLine))) {\n                // Append to the previous line\n                processedLines[processedLines.length - 1] += ' ' + line;\n            } else {\n                processedLines.push(line);\n                previousLine = line;\n            }\n        }\n        // STAGE 4: Structure validation and formatting\n        // Now validate option sequence (A, B, C, D) in final output\n        const finalLines = [];\n        let currentQuestion = null;\n        let options = [];\n        for(let i = 0; i < processedLines.length; i++){\n            const line = processedLines[i];\n            // Detect question\n            if (/^\\d+\\)/.test(line)) {\n                // If we were processing a previous question, add it and its options\n                if (currentQuestion !== null) {\n                    finalLines.push(currentQuestion);\n                    // For aptitude tests, ensure options are in correct A-B-C-D order\n                    if (isAptitudeTest && options.length > 0) {\n                        // Sort options in correct order (A, B, C, D)\n                        options.sort((a, b)=>{\n                            const letterA = a.charAt(0);\n                            const letterB = b.charAt(0);\n                            return letterA.localeCompare(letterB);\n                        });\n                    }\n                    // Add the sorted options\n                    finalLines.push(...options);\n                    finalLines.push(''); // Add blank line after options\n                    // Reset for next question\n                    options = [];\n                }\n                currentQuestion = line;\n            } else if (/^[A-D]\\./.test(line)) {\n                options.push(line);\n            } else if (/^[A-Z]{3,}$/.test(line)) {\n                if (currentQuestion !== null) {\n                    finalLines.push(currentQuestion);\n                    finalLines.push(...options);\n                    finalLines.push('');\n                    options = [];\n                    currentQuestion = null;\n                }\n                finalLines.push('');\n                finalLines.push(line);\n                finalLines.push('');\n            } else if (line !== '') {\n                // If we're between questions, just add the line\n                if (currentQuestion === null) {\n                    finalLines.push(line);\n                } else if (options.length === 0) {\n                    currentQuestion += ' ' + line;\n                } else if (options.length > 0) {\n                    options[options.length - 1] += ' ' + line;\n                }\n            } else {\n                if (i > 0 && processedLines[i - 1] !== '') {\n                    finalLines.push('');\n                }\n            }\n        }\n        // Add the last question and its options\n        if (currentQuestion !== null) {\n            finalLines.push(currentQuestion);\n            // For aptitude tests, ensure options are in correct A-B-C-D order\n            if (isAptitudeTest && options.length > 0) {\n                // Sort options in correct order (A, B, C, D)\n                options.sort((a, b)=>{\n                    const letterA = a.charAt(0);\n                    const letterB = b.charAt(0);\n                    return letterA.localeCompare(letterB);\n                });\n            }\n            // Add the sorted options\n            finalLines.push(...options);\n        }\n        // STAGE 5: Final cleanup and formatting\n        let result = finalLines.join('\\n');\n        // Final cleanup - fix common issues that might have been introduced\n        result = result.replace(/\\n{3,}/g, '\\n\\n'); // Remove excessive blank lines\n        result = result.replace(/\\s{2,}/g, ' '); // Remove double spaces\n        // Fix word meaning format issues that might have been introduced\n        if (containsWordSynonymQuestions) {\n            // Fix question patterns specific to word meaning tests\n            result = result.replace(/closest\\s+to\\s+the\\s+meaning/gi, \"closest to the meaning\");\n            result = result.replace(/closest\\s+to\\s+opposite\\s+in\\s+meaning/gi, \"closest to opposite in meaning\");\n            result = result.replace(/Mark\\s+the\\s+option\\s+which\\s+is\\s+closest/gi, \"Mark the option which is closest\");\n            // Make main word stand out\n            result = result.replace(/(?:HOSTILE|GROVEL|[A-Z]{3,})/g, (match)=>\"\\n\".concat(match, \"\\n\"));\n        }\n        // If it's an aptitude test, apply one more pass of specific formatting\n        if (isAptitudeTest) {\n            // Ensure there's proper spacing around the question number\n            result = result.replace(/(\\d+)\\)\\s*([A-Za-z])/g, '$1) $2');\n            // Ensure consistent option formatting\n            result = result.replace(/([A-D])\\.\\s+/g, '$1. ');\n            // Fix decimals that might have been missed\n            result = result.replace(/(\\d+)\\s+(\\d+)/g, (match, p1, p2)=>{\n                // Only join with decimal if it makes sense (like 17 5 -> 17.5)\n                if (p2.length === 1 || p2.length === 2) {\n                    return p1 + '.' + p2;\n                }\n                return match; // Leave as is\n            });\n        }\n        return result;\n    };\n    // Post-process mathematical and scientific notation\n    const enhanceMathText = (text)=>{\n        // Fix common errors in mathematical notation\n        // Fix decimal points\n        text = text.replace(/(\\d+)\\s*[.,;]\\s*(\\d+)/g, '$1.$2');\n        // Fix exponents\n        text = text.replace(/(\\d+)\\s*\\^\\s*(\\d+)/g, '$1^$2');\n        // Fix fractions\n        text = text.replace(/(\\d+)\\s*\\/\\s*(\\d+)/g, '$1/$2');\n        // Fix multiplication symbols (× often gets misrecognized)\n        text = text.replace(/(\\d+)\\s*[xX*]\\s*(\\d+)/g, '$1 × $2');\n        // Fix equals signs with extra spacing\n        text = text.replace(/\\s*=\\s*/g, ' = ');\n        // Fix units in scientific notation\n        text = text.replace(/(\\d+(?:\\.\\d+)?)\\s*([µmcdk]?(?:m|g|s|A|K|mol|cd|Hz|N|Pa|J|W|C|V|F|Ω|S|Wb|T|H|lm|lx))\\b/gi, (match, num, unit)=>\"\".concat(num, \" \").concat(unit.toLowerCase()));\n        // Fix ranges with dash or hyphen\n        text = text.replace(/(\\d+)\\s*[-–—]\\s*(\\d+)/g, '$1-$2');\n        // Fix subscripts in chemical formulas\n        text = text.replace(/([A-Z][a-z]?)(\\d+)/g, '$1₍$2₎');\n        // Fix squared and cubed notation\n        text = text.replace(/(\\d+)\\s*m\\s*2\\b/gi, '$1 m²');\n        text = text.replace(/(\\d+)\\s*m\\s*3\\b/gi, '$1 m³');\n        // Fix percentage notation\n        text = text.replace(/(\\d+)\\s*(?:percent|pct|%)/gi, '$1%');\n        // Fix common errors with mathematical symbols\n        text = text.replace(/[≤≥<>]\\s*=\\s*/g, (match)=>{\n            if (match.includes('<')) return '≤ ';\n            if (match.includes('>')) return '≥ ';\n            return match.trim() + ' ';\n        });\n        // When it appears to be a math/science equation or problem, add more space between sections\n        if (/\\d+\\s*[+\\-×÷=]/g.test(text)) {\n            // Add blank line before new problems/equations\n            text = text.replace(/(\\d+\\s*[+\\-×÷=].*?)(\\n\\d+\\.)/g, '$1\\n\\n$2');\n        }\n        return text;\n    };\n    // Copy text to clipboard\n    const copyToClipboard = ()=>{\n        if (!combinedText) return;\n        navigator.clipboard.writeText(combinedText).then(()=>{\n            toast({\n                title: 'Copied to clipboard',\n                status: 'success',\n                duration: 2000,\n                isClosable: true\n            });\n        }).catch((error)=>{\n            console.error('Error copying to clipboard:', error);\n            toast({\n                title: 'Failed to copy',\n                description: 'Please try selecting and copying the text manually.',\n                status: 'error',\n                duration: 3000,\n                isClosable: true\n            });\n        });\n    };\n    // Reset everything\n    const handleReset = ()=>{\n        setImages([]);\n        setCombinedText('');\n    };\n    // Update preprocessing options\n    const updatePreprocessing = (key, value)=>{\n        setPreprocessing((prev)=>({\n                ...prev,\n                [key]: value\n            }));\n    };\n    // Add advanced settings to the UI controls\n    const updatePreprocessingUI = ()=>{\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Grid, {\n            templateColumns: [\n                \"1fr\",\n                null,\n                \"1fr 1fr\"\n            ],\n            gap: [\n                2,\n                3,\n                4\n            ],\n            mt: 2,\n            pl: [\n                2,\n                3,\n                4\n            ],\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.FormControl, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.FormLabel, {\n                            htmlFor: \"grayscale\",\n                            mb: \"0\",\n                            fontSize: [\n                                \"xs\",\n                                \"sm\"\n                            ],\n                            children: \"Convert to Grayscale\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1747,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Switch, {\n                            id: \"grayscale\",\n                            isChecked: preprocessing.grayscale,\n                            onChange: (e)=>updatePreprocessing('grayscale', e.target.checked),\n                            isDisabled: isProcessing,\n                            colorScheme: \"blue\",\n                            size: [\n                                \"sm\",\n                                \"md\"\n                            ]\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1750,\n                            columnNumber: 23\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 1746,\n                    columnNumber: 21\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.FormControl, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.FormLabel, {\n                            htmlFor: \"binarize\",\n                            mb: \"0\",\n                            fontSize: [\n                                \"xs\",\n                                \"sm\"\n                            ],\n                            children: \"Binarize (Black & White)\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1761,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Switch, {\n                            id: \"binarize\",\n                            isChecked: preprocessing.binarize,\n                            onChange: (e)=>updatePreprocessing('binarize', e.target.checked),\n                            isDisabled: isProcessing,\n                            colorScheme: \"blue\",\n                            size: [\n                                \"sm\",\n                                \"md\"\n                            ]\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1764,\n                            columnNumber: 23\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 1760,\n                    columnNumber: 21\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.FormControl, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.FormLabel, {\n                            htmlFor: \"denoise\",\n                            mb: \"0\",\n                            fontSize: [\n                                \"xs\",\n                                \"sm\"\n                            ],\n                            children: \"Denoise Image\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1775,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Switch, {\n                            id: \"denoise\",\n                            isChecked: preprocessing.denoise,\n                            onChange: (e)=>updatePreprocessing('denoise', e.target.checked),\n                            isDisabled: isProcessing,\n                            colorScheme: \"blue\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1778,\n                            columnNumber: 25\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 1774,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.FormControl, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.FormLabel, {\n                            htmlFor: \"sharpen\",\n                            mb: \"0\",\n                            fontSize: \"sm\",\n                            children: \"Sharpen Text\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1788,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Switch, {\n                            id: \"sharpen\",\n                            isChecked: preprocessing.sharpen,\n                            onChange: (e)=>updatePreprocessing('sharpen', e.target.checked),\n                            isDisabled: isProcessing,\n                            colorScheme: \"blue\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1791,\n                            columnNumber: 29\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 1787,\n                    columnNumber: 27\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.FormControl, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.FormLabel, {\n                            htmlFor: \"adaptiveThreshold\",\n                            mb: \"0\",\n                            fontSize: \"sm\",\n                            children: \"Adaptive Threshold\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1801,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Switch, {\n                            id: \"adaptiveThreshold\",\n                            isChecked: preprocessing.adaptiveThreshold,\n                            onChange: (e)=>updatePreprocessing('adaptiveThreshold', e.target.checked),\n                            isDisabled: isProcessing || !preprocessing.binarize,\n                            colorScheme: \"blue\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1804,\n                            columnNumber: 29\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 1800,\n                    columnNumber: 27\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.FormControl, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.FormLabel, {\n                                fontSize: \"sm\",\n                                children: \"Contrast Adjustment\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 1815,\n                                columnNumber: 31\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Flex, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.Slider, {\n                                        value: preprocessing.contrast,\n                                        min: 0.5,\n                                        max: 2,\n                                        step: 0.1,\n                                        onChange: (v)=>updatePreprocessing('contrast', v),\n                                        isDisabled: isProcessing,\n                                        flex: \"1\",\n                                        mr: 2,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.SliderTrack, {\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.SliderFilledTrack, {}, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 1828,\n                                                    columnNumber: 37\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 1827,\n                                                columnNumber: 35\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.SliderThumb, {}, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 1830,\n                                                columnNumber: 35\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                        lineNumber: 1817,\n                                        columnNumber: 33\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberInput, {\n                                        value: preprocessing.contrast,\n                                        min: 0.5,\n                                        max: 2,\n                                        step: 0.1,\n                                        onChange: (_, val)=>updatePreprocessing('contrast', val),\n                                        isDisabled: isProcessing,\n                                        size: [\n                                            \"xs\",\n                                            \"sm\"\n                                        ],\n                                        maxW: [\n                                            \"50px\",\n                                            \"70px\"\n                                        ],\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberInputField, {}, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 1842,\n                                                columnNumber: 35\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberInputStepper, {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberIncrementStepper, {}, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 1844,\n                                                        columnNumber: 37\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberDecrementStepper, {}, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 1845,\n                                                        columnNumber: 37\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 1843,\n                                                columnNumber: 35\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                        lineNumber: 1832,\n                                        columnNumber: 33\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 1816,\n                                columnNumber: 31\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 1814,\n                        columnNumber: 29\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 1813,\n                    columnNumber: 27\n                }, this),\n                preprocessing.binarize && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.FormControl, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.FormLabel, {\n                                fontSize: \"sm\",\n                                children: \"Threshold\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 1855,\n                                columnNumber: 33\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Flex, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.Slider, {\n                                        value: preprocessing.threshold,\n                                        min: 0,\n                                        max: 255,\n                                        step: 1,\n                                        onChange: (v)=>updatePreprocessing('threshold', v),\n                                        isDisabled: isProcessing || preprocessing.adaptiveThreshold,\n                                        flex: \"1\",\n                                        mr: 2,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.SliderTrack, {\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.SliderFilledTrack, {}, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 1868,\n                                                    columnNumber: 39\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 1867,\n                                                columnNumber: 37\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.SliderThumb, {}, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 1870,\n                                                columnNumber: 37\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                        lineNumber: 1857,\n                                        columnNumber: 35\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberInput, {\n                                        value: preprocessing.threshold,\n                                        min: 0,\n                                        max: 255,\n                                        step: 1,\n                                        onChange: (_, val)=>updatePreprocessing('threshold', val),\n                                        isDisabled: isProcessing || preprocessing.adaptiveThreshold,\n                                        size: \"sm\",\n                                        maxW: \"70px\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberInputField, {}, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 1882,\n                                                columnNumber: 37\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberInputStepper, {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberIncrementStepper, {}, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 1884,\n                                                        columnNumber: 39\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberDecrementStepper, {}, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 1885,\n                                                        columnNumber: 39\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 1883,\n                                                columnNumber: 37\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                        lineNumber: 1872,\n                                        columnNumber: 35\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 1856,\n                                columnNumber: 33\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 1854,\n                        columnNumber: 31\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 1853,\n                    columnNumber: 29\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.FormControl, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.FormLabel, {\n                                fontSize: \"sm\",\n                                children: \"Scale Factor\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 1895,\n                                columnNumber: 31\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Flex, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.Slider, {\n                                        value: preprocessing.scale,\n                                        min: 1,\n                                        max: 3,\n                                        step: 0.5,\n                                        onChange: (v)=>updatePreprocessing('scale', v),\n                                        isDisabled: isProcessing,\n                                        flex: \"1\",\n                                        mr: 2,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.SliderTrack, {\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.SliderFilledTrack, {}, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 1908,\n                                                    columnNumber: 37\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 1907,\n                                                columnNumber: 35\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.SliderThumb, {}, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 1910,\n                                                columnNumber: 35\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                        lineNumber: 1897,\n                                        columnNumber: 33\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberInput, {\n                                        value: preprocessing.scale,\n                                        min: 1,\n                                        max: 3,\n                                        step: 0.5,\n                                        onChange: (_, val)=>updatePreprocessing('scale', val),\n                                        isDisabled: isProcessing,\n                                        size: \"sm\",\n                                        maxW: \"70px\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberInputField, {}, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 1922,\n                                                columnNumber: 35\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberInputStepper, {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberIncrementStepper, {}, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 1924,\n                                                        columnNumber: 37\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.NumberDecrementStepper, {}, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 1925,\n                                                        columnNumber: 37\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 1923,\n                                                columnNumber: 35\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                        lineNumber: 1912,\n                                        columnNumber: 33\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 1896,\n                                columnNumber: 31\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 1894,\n                        columnNumber: 29\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 1893,\n                    columnNumber: 27\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.FormControl, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.FormLabel, {\n                            htmlFor: \"deskew\",\n                            mb: \"0\",\n                            fontSize: \"sm\",\n                            children: \"Auto-Deskew\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1933,\n                            columnNumber: 29\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Switch, {\n                            id: \"deskew\",\n                            isChecked: preprocessing.deskew,\n                            onChange: (e)=>updatePreprocessing('deskew', e.target.checked),\n                            isDisabled: isProcessing,\n                            colorScheme: \"blue\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1936,\n                            columnNumber: 29\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 1932,\n                    columnNumber: 27\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n            lineNumber: 1745,\n            columnNumber: 7\n        }, this);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_12__.VStack, {\n        spacing: 6,\n        w: \"full\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                w: \"full\",\n                bg: \"blue.600\",\n                p: [\n                    3,\n                    4\n                ],\n                borderRadius: \"md\",\n                boxShadow: \"md\",\n                color: \"white\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Flex, {\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    direction: [\n                        \"column\",\n                        \"row\"\n                    ],\n                    gap: [\n                        2,\n                        0\n                    ],\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_13__.Heading, {\n                                    size: [\n                                        \"md\",\n                                        \"lg\"\n                                    ],\n                                    children: \"Image to Text Converter\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 1966,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                    mt: 1,\n                                    fontSize: [\n                                        \"xs\",\n                                        \"sm\"\n                                    ],\n                                    children: \"Advanced OCR with AI-powered enhancement\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 1967,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1965,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_15__.HStack, {\n                            spacing: 2,\n                            mt: [\n                                2,\n                                0\n                            ],\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_16__.Badge, {\n                                    colorScheme: \"red\",\n                                    p: [\n                                        1,\n                                        2\n                                    ],\n                                    borderRadius: \"md\",\n                                    fontSize: [\n                                        \"xs\",\n                                        \"sm\"\n                                    ],\n                                    children: \"Fast\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 1970,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_16__.Badge, {\n                                    colorScheme: \"blue\",\n                                    p: [\n                                        1,\n                                        2\n                                    ],\n                                    borderRadius: \"md\",\n                                    fontSize: [\n                                        \"xs\",\n                                        \"sm\"\n                                    ],\n                                    children: \"Balanced\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 1973,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_16__.Badge, {\n                                    colorScheme: \"green\",\n                                    p: [\n                                        1,\n                                        2\n                                    ],\n                                    borderRadius: \"md\",\n                                    fontSize: [\n                                        \"xs\",\n                                        \"sm\"\n                                    ],\n                                    children: \"Ultra Accurate\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 1976,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 1969,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 1959,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                lineNumber: 1951,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                w: \"full\",\n                h: [\n                    \"150px\",\n                    \"180px\",\n                    \"200px\"\n                ],\n                border: \"2px dashed\",\n                borderColor: isDragActive ? 'blue.500' : 'gray.200',\n                borderRadius: \"md\",\n                bg: isDragActive ? 'blue.50' : 'white',\n                p: [\n                    2,\n                    3,\n                    4\n                ],\n                textAlign: \"center\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                position: \"relative\",\n                transition: \"all 0.2s\",\n                ref: dropAreaRef,\n                onDragOver: handleDragOver,\n                onDragLeave: handleDragLeave,\n                onDrop: handleDrop,\n                onClick: ()=>{\n                    var _fileInputRef_current;\n                    return (_fileInputRef_current = fileInputRef.current) === null || _fileInputRef_current === void 0 ? void 0 : _fileInputRef_current.click();\n                },\n                cursor: \"pointer\",\n                boxShadow: \"sm\",\n                _hover: {\n                    borderColor: 'blue.300',\n                    bg: 'blue.50'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_17__.Input, {\n                        type: \"file\",\n                        accept: ACCEPTED_FILE_TYPES.join(','),\n                        multiple: true,\n                        onChange: handleFileInputChange,\n                        ref: fileInputRef,\n                        display: \"none\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2008,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                        fontSize: [\n                            \"4xl\",\n                            \"5xl\"\n                        ],\n                        color: \"blue.500\",\n                        children: \"\\uD83D\\uDCC4\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2016,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                        fontWeight: \"medium\",\n                        mt: 2,\n                        color: \"gray.700\",\n                        fontSize: [\n                            \"sm\",\n                            \"md\"\n                        ],\n                        children: \"Click to upload or drag & drop images here\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2019,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                        fontSize: [\n                            \"xs\",\n                            \"sm\"\n                        ],\n                        mt: 1,\n                        color: \"gray.500\",\n                        children: [\n                            \"Supports JPEG, PNG, WEBP, GIF, BMP (up to \",\n                            MAX_IMAGES,\n                            \" files)\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2022,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                        fontSize: \"xs\",\n                        mt: 2,\n                        color: \"blue.500\",\n                        display: [\n                            \"none\",\n                            \"block\"\n                        ],\n                        children: \"Pro tip: You can also paste images directly from your clipboard\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2025,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                lineNumber: 1984,\n                columnNumber: 7\n            }, this),\n            images.length >= MAX_IMAGES && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                w: \"full\",\n                p: 3,\n                bg: \"yellow.100\",\n                color: \"yellow.800\",\n                borderRadius: \"md\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                    fontSize: \"sm\",\n                    children: [\n                        \"Maximum image limit reached (\",\n                        MAX_IMAGES,\n                        \").\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 2033,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                lineNumber: 2032,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                w: \"full\",\n                bg: \"white\",\n                p: [\n                    3,\n                    4\n                ],\n                borderRadius: \"md\",\n                boxShadow: \"sm\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_18__.Accordion, {\n                    allowToggle: true,\n                    defaultIndex: [\n                        0\n                    ],\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_19__.AccordionItem, {\n                        border: \"none\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_20__.AccordionButton, {\n                                    px: 0,\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                                            flex: \"1\",\n                                            textAlign: \"left\",\n                                            fontWeight: \"medium\",\n                                            fontSize: [\n                                                \"sm\",\n                                                \"md\"\n                                            ],\n                                            children: \"OCR Settings\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                            lineNumber: 2043,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_21__.AccordionIcon, {}, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                            lineNumber: 2046,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 2042,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 2041,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_22__.AccordionPanel, {\n                                pb: 4,\n                                px: 0,\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_12__.VStack, {\n                                    spacing: [\n                                        3,\n                                        4\n                                    ],\n                                    align: \"stretch\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                                    fontSize: \"sm\",\n                                                    mb: 1,\n                                                    fontWeight: \"medium\",\n                                                    children: \"OCR Processing Model\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 2053,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_23__.Select, {\n                                                    value: selectedModel,\n                                                    onChange: (e)=>setSelectedModel(e.target.value),\n                                                    size: [\n                                                        \"xs\",\n                                                        \"sm\"\n                                                    ],\n                                                    isDisabled: isProcessing,\n                                                    children: Object.entries(OCR_MODELS).map((param)=>{\n                                                        let [key, model] = param;\n                                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: key,\n                                                            children: [\n                                                                model.name,\n                                                                \" - \",\n                                                                model.description\n                                                            ]\n                                                        }, key, true, {\n                                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                            lineNumber: 2061,\n                                                            columnNumber: 23\n                                                        }, this);\n                                                    })\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 2054,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                            lineNumber: 2052,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Grid, {\n                                            templateColumns: [\n                                                \"1fr\",\n                                                \"1fr\",\n                                                \"1fr 1fr\"\n                                            ],\n                                            gap: [\n                                                2,\n                                                4\n                                            ],\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                                        fontSize: \"sm\",\n                                                        mb: 1,\n                                                        children: \"Language\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 2071,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_23__.Select, {\n                                                        value: selectedLanguage,\n                                                        onChange: (e)=>setSelectedLanguage(e.target.value),\n                                                        size: [\n                                                            \"xs\",\n                                                            \"sm\"\n                                                        ],\n                                                        isDisabled: isProcessing,\n                                                        children: Object.entries(OCR_LANGUAGES).map((param)=>{\n                                                            let [value, label] = param;\n                                                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                value: value,\n                                                                children: label\n                                                            }, value, false, {\n                                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                                lineNumber: 2079,\n                                                                columnNumber: 25\n                                                            }, this);\n                                                        })\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 2072,\n                                                        columnNumber: 21\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 2070,\n                                                columnNumber: 19\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                            lineNumber: 2069,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {}, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                            lineNumber: 2088,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.FormControl, {\n                                                display: \"flex\",\n                                                alignItems: \"center\",\n                                                justifyContent: \"space-between\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.FormLabel, {\n                                                        htmlFor: \"detect-tables\",\n                                                        mb: \"0\",\n                                                        fontSize: [\n                                                            \"xs\",\n                                                            \"sm\"\n                                                        ],\n                                                        children: \"Detect Tables\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 2092,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Switch, {\n                                                        id: \"detect-tables\",\n                                                        isChecked: detectTables,\n                                                        onChange: (e)=>setDetectTables(e.target.checked),\n                                                        isDisabled: isProcessing,\n                                                        colorScheme: \"blue\",\n                                                        size: [\n                                                            \"sm\",\n                                                            \"md\"\n                                                        ]\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 2095,\n                                                        columnNumber: 21\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 2091,\n                                                columnNumber: 19\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                            lineNumber: 2090,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_5__.FormControl, {\n                                                display: \"flex\",\n                                                alignItems: \"center\",\n                                                justifyContent: \"space-between\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_6__.FormLabel, {\n                                                        htmlFor: \"ai-enhancement\",\n                                                        mb: \"0\",\n                                                        fontSize: [\n                                                            \"xs\",\n                                                            \"sm\"\n                                                        ],\n                                                        children: \"Use AI Enhancement\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 2107,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Switch, {\n                                                        id: \"ai-enhancement\",\n                                                        isChecked: useAiEnhancement,\n                                                        onChange: (e)=>setUseAiEnhancement(e.target.checked),\n                                                        isDisabled: isProcessing,\n                                                        colorScheme: \"blue\",\n                                                        size: [\n                                                            \"sm\",\n                                                            \"md\"\n                                                        ]\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 2110,\n                                                        columnNumber: 21\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 2106,\n                                                columnNumber: 19\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                            lineNumber: 2105,\n                                            columnNumber: 17\n                                        }, this),\n                                        detectTables && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                                            gridColumn: [\n                                                \"1\",\n                                                null,\n                                                \"span 2\"\n                                            ],\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                                    fontSize: \"sm\",\n                                                    mb: 1,\n                                                    children: \"Table Output Format\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 2123,\n                                                    columnNumber: 21\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_23__.Select, {\n                                                    value: tableFormat,\n                                                    onChange: (e)=>setTableFormat(e.target.value),\n                                                    size: [\n                                                        \"xs\",\n                                                        \"sm\"\n                                                    ],\n                                                    isDisabled: isProcessing || !detectTables,\n                                                    children: Object.entries(TABLE_FORMATS).map((param)=>{\n                                                        let [value, label] = param;\n                                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: value,\n                                                            children: label\n                                                        }, value, false, {\n                                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                            lineNumber: 2131,\n                                                            columnNumber: 25\n                                                        }, this);\n                                                    })\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 2124,\n                                                    columnNumber: 21\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                            lineNumber: 2122,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 2050,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 2049,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2040,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 2039,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                lineNumber: 2038,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                style: {\n                    display: 'none'\n                }\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                lineNumber: 2145,\n                columnNumber: 7\n            }, this),\n            images.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                w: \"full\",\n                bg: \"white\",\n                p: [\n                    3,\n                    4\n                ],\n                borderRadius: \"md\",\n                boxShadow: \"sm\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Flex, {\n                        justify: \"space-between\",\n                        mb: 3,\n                        align: [\n                            \"flex-start\",\n                            \"center\"\n                        ],\n                        direction: [\n                            \"column\",\n                            \"row\"\n                        ],\n                        gap: [\n                            2,\n                            0\n                        ],\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                fontWeight: \"medium\",\n                                fontSize: [\n                                    \"sm\",\n                                    \"md\"\n                                ],\n                                children: [\n                                    \"Images (\",\n                                    images.length,\n                                    \"/\",\n                                    MAX_IMAGES,\n                                    \")\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 2157,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_15__.HStack, {\n                                spacing: 2,\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_24__.Button, {\n                                        size: \"sm\",\n                                        colorScheme: \"red\",\n                                        variant: \"outline\",\n                                        onClick: handleReset,\n                                        isDisabled: isProcessing,\n                                        fontSize: [\n                                            \"xs\",\n                                            \"sm\"\n                                        ],\n                                        children: \"Clear All\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                        lineNumber: 2161,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_24__.Button, {\n                                        size: \"sm\",\n                                        colorScheme: \"blue\",\n                                        onClick: processImages,\n                                        isLoading: isProcessing,\n                                        loadingText: \"Processing\",\n                                        isDisabled: images.length === 0 || isProcessing,\n                                        fontSize: [\n                                            \"xs\",\n                                            \"sm\"\n                                        ],\n                                        children: \"Extract Text\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                        lineNumber: 2171,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 2160,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2150,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Grid, {\n                        templateColumns: [\n                            \"repeat(auto-fill, minmax(100px, 1fr))\",\n                            \"repeat(auto-fill, minmax(120px, 1fr))\",\n                            \"repeat(auto-fill, minmax(150px, 1fr))\"\n                        ],\n                        gap: [\n                            2,\n                            3,\n                            4\n                        ],\n                        maxH: [\n                            \"250px\",\n                            \"300px\"\n                        ],\n                        overflowY: \"auto\",\n                        pb: 2,\n                        children: images.map((image)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                                borderWidth: \"1px\",\n                                borderRadius: \"lg\",\n                                overflow: \"hidden\",\n                                bg: \"white\",\n                                boxShadow: \"sm\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                                    p: [\n                                        1,\n                                        2\n                                    ],\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                                            position: \"relative\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_25__.Image, {\n                                                    src: image.preprocessed || image.preview,\n                                                    alt: image.file.name,\n                                                    objectFit: \"cover\",\n                                                    height: [\n                                                        \"80px\",\n                                                        \"100px\"\n                                                    ],\n                                                    width: \"full\",\n                                                    borderRadius: \"md\",\n                                                    opacity: image.processing ? 0.5 : 1\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 2200,\n                                                    columnNumber: 21\n                                                }, this),\n                                                image.processing && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Flex, {\n                                                    position: \"absolute\",\n                                                    top: \"0\",\n                                                    left: \"0\",\n                                                    right: \"0\",\n                                                    bottom: \"0\",\n                                                    justify: \"center\",\n                                                    align: \"center\",\n                                                    bg: \"blackAlpha.200\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                                        fontSize: \"xs\",\n                                                        fontWeight: \"bold\",\n                                                        children: \"Processing...\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 2220,\n                                                        columnNumber: 25\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 2210,\n                                                    columnNumber: 23\n                                                }, this),\n                                                image.error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_16__.Badge, {\n                                                    colorScheme: \"red\",\n                                                    position: \"absolute\",\n                                                    top: \"1\",\n                                                    right: \"1\",\n                                                    fontSize: \"xs\",\n                                                    children: \"Error\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 2224,\n                                                    columnNumber: 23\n                                                }, this),\n                                                image.text && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_16__.Badge, {\n                                                    colorScheme: \"green\",\n                                                    position: \"absolute\",\n                                                    top: \"1\",\n                                                    right: \"1\",\n                                                    fontSize: \"xs\",\n                                                    children: \"Processed\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 2235,\n                                                    columnNumber: 23\n                                                }, this),\n                                                image.preprocessed && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_16__.Badge, {\n                                                    colorScheme: \"purple\",\n                                                    position: \"absolute\",\n                                                    bottom: \"1\",\n                                                    right: \"1\",\n                                                    fontSize: \"xs\",\n                                                    children: \"Enhanced\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 2246,\n                                                    columnNumber: 23\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_26__.IconButton, {\n                                                    \"aria-label\": \"Remove image\",\n                                                    icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        children: \"✕\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                        lineNumber: 2258,\n                                                        columnNumber: 29\n                                                    }, void 0),\n                                                    size: \"xs\",\n                                                    colorScheme: \"red\",\n                                                    position: \"absolute\",\n                                                    top: \"1\",\n                                                    left: \"1\",\n                                                    onClick: ()=>removeImage(image.id),\n                                                    isDisabled: isProcessing\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                    lineNumber: 2256,\n                                                    columnNumber: 21\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                            lineNumber: 2199,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_27__.Tooltip, {\n                                            label: image.file.name,\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                                fontSize: \"xs\",\n                                                isTruncated: true,\n                                                mt: 1,\n                                                textAlign: \"center\",\n                                                children: [\n                                                    image.file.name.substring(0, 15),\n                                                    image.file.name.length > 15 ? '...' : ''\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                                lineNumber: 2269,\n                                                columnNumber: 21\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                            lineNumber: 2268,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 2198,\n                                    columnNumber: 17\n                                }, this)\n                            }, image.id, false, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 2197,\n                                columnNumber: 15\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2185,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                lineNumber: 2149,\n                columnNumber: 9\n            }, this),\n            isProcessing && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                w: \"full\",\n                bg: \"white\",\n                p: [\n                    3,\n                    4\n                ],\n                borderRadius: \"md\",\n                boxShadow: \"sm\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                        mb: 1,\n                        fontSize: [\n                            \"xs\",\n                            \"sm\"\n                        ],\n                        children: [\n                            \"Processing images (\",\n                            Math.round(progress),\n                            \"%)\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2289,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_28__.Progress, {\n                        value: progress,\n                        size: \"sm\",\n                        colorScheme: \"blue\",\n                        borderRadius: \"md\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2292,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                lineNumber: 2288,\n                columnNumber: 9\n            }, this),\n            combinedText && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                w: \"full\",\n                bg: \"white\",\n                p: [\n                    3,\n                    4\n                ],\n                borderRadius: \"md\",\n                boxShadow: \"sm\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Flex, {\n                        justify: \"space-between\",\n                        mb: 3,\n                        align: [\n                            \"flex-start\",\n                            \"center\"\n                        ],\n                        direction: [\n                            \"column\",\n                            \"row\"\n                        ],\n                        gap: [\n                            2,\n                            0\n                        ],\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                fontWeight: \"medium\",\n                                fontSize: [\n                                    \"sm\",\n                                    \"md\"\n                                ],\n                                children: \"Extracted Text\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 2306,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_15__.HStack, {\n                                spacing: 2,\n                                children: [\n                                    processingMetrics.confidence && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_16__.Badge, {\n                                        colorScheme: \"green\",\n                                        fontSize: [\n                                            \"xs\",\n                                            \"sm\"\n                                        ],\n                                        children: [\n                                            \"Confidence: \",\n                                            processingMetrics.confidence.toFixed(1),\n                                            \"%\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                        lineNumber: 2309,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_24__.Button, {\n                                        size: \"sm\",\n                                        leftIcon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"\\uD83D\\uDCCB\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                            lineNumber: 2315,\n                                            columnNumber: 27\n                                        }, void 0),\n                                        onClick: copyToClipboard,\n                                        colorScheme: \"blue\",\n                                        variant: \"outline\",\n                                        fontSize: [\n                                            \"xs\",\n                                            \"sm\"\n                                        ],\n                                        children: \"Copy All\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                        lineNumber: 2313,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                lineNumber: 2307,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2299,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_29__.Textarea, {\n                        value: combinedText,\n                        onChange: (e)=>setCombinedText(e.target.value),\n                        rows: [\n                            8,\n                            10,\n                            12\n                        ],\n                        resize: \"vertical\",\n                        borderColor: \"gray.300\",\n                        _hover: {\n                            borderColor: 'gray.400'\n                        },\n                        borderRadius: \"md\",\n                        fontFamily: \"monospace\",\n                        fontSize: [\n                            \"xs\",\n                            \"sm\"\n                        ]\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2326,\n                        columnNumber: 11\n                    }, this),\n                    processingMetrics.totalTime && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                        fontSize: \"xs\",\n                        color: \"gray.500\",\n                        mt: 2,\n                        textAlign: \"right\",\n                        children: [\n                            \"Processed in \",\n                            processingMetrics.totalTime.toFixed(1),\n                            \" seconds\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                        lineNumber: 2339,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                lineNumber: 2298,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                w: \"full\",\n                bg: \"gray.50\",\n                p: [\n                    3,\n                    4\n                ],\n                borderRadius: \"md\",\n                boxShadow: \"sm\",\n                mt: [\n                    4,\n                    6\n                ],\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Flex, {\n                    direction: [\n                        \"column\",\n                        \"row\"\n                    ],\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    gap: [\n                        3,\n                        0\n                    ],\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                            textAlign: \"center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                    fontWeight: \"bold\",\n                                    fontSize: [\n                                        \"sm\",\n                                        \"md\"\n                                    ],\n                                    children: \"Developed by:\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 2362,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                    fontSize: [\n                                        \"xs\",\n                                        \"sm\"\n                                    ],\n                                    children: \"Swastik Raj\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 2363,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                    fontSize: [\n                                        \"xs\",\n                                        \"sm\"\n                                    ],\n                                    children: \"Vansh Singh\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 2364,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 2361,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Box, {\n                            textAlign: \"center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                    fontWeight: \"bold\",\n                                    fontSize: [\n                                        \"sm\",\n                                        \"md\"\n                                    ],\n                                    children: \"Contact:\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 2367,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                    fontSize: [\n                                        \"xs\",\n                                        \"sm\"\n                                    ],\n                                    children: \"Phone: 7889364915\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 2368,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_14__.Text, {\n                                    fontSize: [\n                                        \"xs\",\n                                        \"sm\"\n                                    ],\n                                    children: \"Advanced Image to Text Conversion\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                                    lineNumber: 2369,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                            lineNumber: 2366,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                    lineNumber: 2355,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n                lineNumber: 2347,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\swast\\\\Downloads\\\\image to text\\\\src\\\\components\\\\ImageToText.tsx\",\n        lineNumber: 1949,\n        columnNumber: 5\n    }, this);\n}\n_s(ImageToText, \"Jezqae/RPeC/OD7kqQZoUCx4fGs=\", false, function() {\n    return [\n        _chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.useToast\n    ];\n});\n_c = ImageToText;\nvar _c;\n$RefreshReg$(_c, \"ImageToText\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ImageToText.tsx\n"));

/***/ })

});